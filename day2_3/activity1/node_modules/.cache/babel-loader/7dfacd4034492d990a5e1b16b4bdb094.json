{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/willfoody/Documents/Repositories/Week10/day2/activity1/src/App.js\";\nimport React, { Component } from 'react';\nimport Movies from './Components/Movies'; // named export \n// when importing make sure to use curly brackets\n\nexport class App extends Component {\n  constructor() {\n    super();\n\n    this.fetchMovies = () => {\n      fetch('http://www.omdbapi.com/?s=Batman&page=2&apikey=564727fa').then(response => response.json()).then(result => {\n        this.setState({\n          movies: result.Search\n        });\n      });\n    };\n\n    console.log('constructor');\n    this.state = {\n      movies: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchMovies();\n  }\n\n  render() {\n    console.log('render');\n    return (\n      /*#__PURE__*/\n\n      /*<Counter /> */\n      _jsxDEV(Movies, {\n        movies: this.state.movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n} // import React, { Component } from 'react'\n// import './App.css'\n// class Stepper extends Component {\n// constructor() {\n// make sure to call the constructor of the parent (Component)\n// super()\n//this.counterValue = 0 \n//console.log(this) // the value of this is NOT undefined \n// We are providing the value of this at a time when it was not undefined to the handleIncrement function \n//this.handleIncrement = this.handleIncrement.bind(this)\n// STATE \n// Every time you will update the state \n// it will automatically call RENDER \n//     this.state = {\n//         stepper: 91, \n//     }\n// }\n//   lowerIncrement = () => {\n//     // update the state and increment the counter \n//     //this.state.counter += 1 // DON'T DO THIS \n//     // setState is async operation, which means it will eventually update the state  \n//     this.setState({\n//         stepper: this.state.stepper - 1 \n//     },() => {\n//         // OPTIONAL: Fired when the state has been updated \n//         console.log('INSIDE STATE CALLBACK')\n//         console.log(this.state.stepper)\n//     })\n//     console.log(this.state.stepper)\n//     //this.counterValue += 1 \n//     //console.log(this.counterValue)\n// }\n// handleIncrement = () => {\n//     // update the state and increment the counter \n//     //this.state.counter += 1 // DON'T DO THIS \n//     // setState is async operation, which means it will eventually update the state  \n//     this.setState({\n//         stepper: this.state.stepper + 1 \n//     },() => {\n//         // OPTIONAL: Fired when the state has been updated \n//         console.log('INSIDE STATE CALLBACK')\n//         console.log(this.state.stepper)\n//     })\n//     console.log(this.state.stepper)\n//     //this.counterValue += 1 \n//     //console.log(this.counterValue)\n// }\n\n/*\nhandleIncrement() {\n    console.log(this)\n   // this.counterValue += 1 \n   // console.log(this.counterValue)\n} */\n//     render() {\n//         return (\n//             <div className=\"stepper\">\n//                 <button onClick={this.lowerIncrement} id='lowerButton'>-</button>\n//                 <h1>{this.state.stepper}</h1>\n//                 <button onClick={this.handleIncrement} id='higherButton'>+</button>\n//             </div>\n//         )\n//     }\n// }\n// export default Stepper","map":{"version":3,"sources":["/Users/willfoody/Documents/Repositories/Week10/day2/activity1/src/App.js"],"names":["React","Component","Movies","App","constructor","fetchMovies","fetch","then","response","json","result","setState","movies","Search","console","log","state","componentDidMount","render"],"mappings":";;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAEA;AACA;;AACA,OAAO,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAEjCG,EAAAA,WAAW,GAAG;AACZ;;AADY,SAUdC,WAVc,GAUA,MAAM;AAElBC,MAAAA,KAAK,CAAC,yDAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,MAAM,IAAI;AACZ,aAAKC,QAAL,CAAc;AACZC,UAAAA,MAAM,EAAEF,MAAM,CAACG;AADH,SAAd;AAGH,OANH;AAQD,KApBa;;AAEZC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEA,SAAKC,KAAL,GAAa;AACXJ,MAAAA,MAAM,EAAE;AADG,KAAb;AAID;;AAcDK,EAAAA,iBAAiB,GAAG;AAClB,SAAKZ,WAAL;AACD;;AAEDa,EAAAA,MAAM,GAAG;AACPJ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA;AAAA;;AACE;AACA,cAAC,MAAD;AAAQ,QAAA,MAAM,EAAI,KAAKC,KAAL,CAAWJ;AAA7B;AAAA;AAAA;AAAA;AAAA;AAFF;AAID;;AAlCgC,C,CAqEnC;AACA;AAEA;AAEI;AACI;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACJ;AACA;AACA;AAEA;AAEF;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGE;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA;AACJ;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["\n\nimport React, { Component } from 'react'\nimport Movies from './Components/Movies'\n\n// named export \n// when importing make sure to use curly brackets\nexport class App extends Component {\n\n  constructor() {\n    super()\n    console.log('constructor')\n\n    this.state = {\n      movies: [] \n    }\n\n  }\n\n  fetchMovies = () => {\n\n    fetch('http://www.omdbapi.com/?s=Batman&page=2&apikey=564727fa')\n      .then(response => response.json())\n      .then(result => {\n          this.setState({\n            movies: result.Search\n          })\n      })\n\n  }\n\n  componentDidMount() {\n    this.fetchMovies()\n  }\n\n  render() {\n    console.log('render')\n    return (\n      /*<Counter /> */\n      <Movies movies = {this.state.movies} />\n    )\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { Component } from 'react'\n// import './App.css'\n\n// class Stepper extends Component {\n\n    // constructor() {\n        // make sure to call the constructor of the parent (Component)\n        // super()\n        //this.counterValue = 0 \n\n        //console.log(this) // the value of this is NOT undefined \n\n        // We are providing the value of this at a time when it was not undefined to the handleIncrement function \n        //this.handleIncrement = this.handleIncrement.bind(this)\n\n        // STATE \n        // Every time you will update the state \n        // it will automatically call RENDER \n    //     this.state = {\n    //         stepper: 91, \n    //     }\n\n    // }\n\n  //   lowerIncrement = () => {\n\n  //     // update the state and increment the counter \n  //     //this.state.counter += 1 // DON'T DO THIS \n\n  //     // setState is async operation, which means it will eventually update the state  \n  //     this.setState({\n  //         stepper: this.state.stepper - 1 \n  //     },() => {\n  //         // OPTIONAL: Fired when the state has been updated \n  //         console.log('INSIDE STATE CALLBACK')\n  //         console.log(this.state.stepper)\n  //     })\n\n  //     console.log(this.state.stepper)\n\n  //     //this.counterValue += 1 \n  //     //console.log(this.counterValue)\n  // }\n    \n    \n    // handleIncrement = () => {\n\n    //     // update the state and increment the counter \n    //     //this.state.counter += 1 // DON'T DO THIS \n\n    //     // setState is async operation, which means it will eventually update the state  \n    //     this.setState({\n    //         stepper: this.state.stepper + 1 \n    //     },() => {\n    //         // OPTIONAL: Fired when the state has been updated \n    //         console.log('INSIDE STATE CALLBACK')\n    //         console.log(this.state.stepper)\n    //     })\n\n    //     console.log(this.state.stepper)\n\n    //     //this.counterValue += 1 \n    //     //console.log(this.counterValue)\n    // }\n    \n    /*\n    handleIncrement() {\n        console.log(this)\n       // this.counterValue += 1 \n       // console.log(this.counterValue)\n    } */\n\n//     render() {\n\n//         return (\n\n//             <div className=\"stepper\">\n//                 <button onClick={this.lowerIncrement} id='lowerButton'>-</button>\n//                 <h1>{this.state.stepper}</h1>\n//                 <button onClick={this.handleIncrement} id='higherButton'>+</button>\n//             </div>\n//         )\n//     }\n\n// }\n\n// export default Stepper"]},"metadata":{},"sourceType":"module"}